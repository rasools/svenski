# svenski code
Sys.setenv(RETICULATE_PYTHON = "/Users/rasools/miniconda3/envs/svenski/bin/python")
library(reticulate)
library(spacyr)
library(shiny)
library(DT)
library(httr)
library(jsonlite)

##################################################
chatGPT <- function(prompt, 
                    modelName = "gpt-3.5-turbo",
                    temperature = 1,
                    apiKey = Sys.getenv("chatGPT_API_KEY")) {
  
  if(nchar(apiKey)<1) {
    apiKey <- readline("Paste your API key here: ")
    Sys.setenv(chatGPT_API_KEY = apiKey)
  }
  
  response <- POST(
    url = "https://api.openai.com/v1/chat/completions", 
    add_headers(Authorization = paste("Bearer", apiKey)),
    content_type_json(),
    encode = "json",
    body = list(
      model = modelName,
      temperature = temperature,
      messages = list(list(
        role = "user", 
        content = prompt
      ))
    )
  )
  
  if(status_code(response)>200) {
    stop(content(response))
  }
  
  trimws(content(response)$choices[[1]]$message$content)
}

##################################################

# Initialize the spacyr with the Swedish model
spacy_initialize(model = "sv_core_news_md")
txt <- "kÃ¶rde"
consolidatedtxt <- entity_consolidate(spacy_parse(txt, lemma = FALSE, entity = TRUE, nounphrase = TRUE))

if (consolidatedtxt$pos[1] == "VERB") {
  lines <- readLines("temp_tables/verb.txt")
  table_string <- paste(lines[which(grepl("Category \\| Details", lines)):which(grepl("Supinum example sentence \\|", lines))], collapse = "\n")
  prompt <- paste(
    consolidatedtxt$token[1],"is a Swedish verb. I want to use this information to make an Anki card for learning Swedish. Can you help me with that? Please just fill in the blanks in the following table, without adding any additional information. For the example sentences, Thanks! Here is the table:",
    table_string,
    sep = " "
  )
  ans = chatGPT(prompt)
}

ans_df <- strsplit(ans)[[1]]
keys <- vector()
values <- vector()

for (line in ans_df) {
  split_line <- strsplit(ans_df, " \\| ", fixed=TRUE)[[1]]
  keys <- c(keys, split_line[1])
  values <- c(values, split_line[2])
}

# Create a data frame
fin_df <- data.frame(Category = keys, Details = values, stringsAsFactors = FALSE)
